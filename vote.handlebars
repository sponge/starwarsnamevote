
<!doctype html>
<head>
  <meta charset="utf-8">
  <title>Star Wars And Pickle Rick Name Kombat</title>
  <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0' />
  <script type="text/javascript" defer>
    function update(o) {
      console.log('updating with', o);
      document.querySelector('.matchup .first.entry .name').textContent = o.match.first.name;
      document.querySelector('.matchup .first.entry .author').textContent = o.match.first.author;
      document.querySelector('.matchup .first.entry button').setAttribute('winner', o.match.first.id);
      document.querySelector('.matchup .first.entry button').setAttribute('loser', o.match.second.id);

      document.querySelector('.matchup .second.entry .name').textContent = o.match.second.name;
      document.querySelector('.matchup .second.entry .author').textContent = o.match.second.author;
      document.querySelector('.matchup .second.entry button').setAttribute('winner', o.match.second.id);
      document.querySelector('.matchup .second.entry button').setAttribute('loser', o.match.first.id);

      if (o.results) {
        document.querySelector('.results').classList.remove('hidden');

        document.querySelector('.results .first.entry .name').textContent = o.results.first.name;
        document.querySelector('.results .first.entry .author').textContent = o.results.first.author;
        document.querySelector('.results .first.entry .score').textContent = o.results.first.score;
        document.querySelector('.results .first.entry .wins').textContent = o.results.first.wins;
        document.querySelector('.results .first.entry .losses').textContent = o.results.first.losses;


        document.querySelector('.results .second.entry .name').textContent = o.results.second.name;
        document.querySelector('.results .second.entry .author').textContent = o.results.second.author;
        document.querySelector('.results .second.entry .score').textContent = o.results.second.score;
        document.querySelector('.results .second.entry .wins').textContent = o.results.second.wins;
        document.querySelector('.results .second.entry .losses').textContent = o.results.second.losses;
      } else {
        document.querySelector('.results').classList.add('hidden');
      }

      document.querySelector('.matchup').classList.remove('loading');
    }

    function vote(ev) {
      const winner = this.getAttribute('winner');
      const loser = this.getAttribute('loser');

      fetch('/vote', {
        method: "POST",
        headers: { "Content-Type": "application/json; charset=utf-8" },
        body: JSON.stringify({winner, loser})
      })
      .then(response => {
        return response.json();
      })
      .then(o => {
        console.log(o);
        update(o);
      })
      .catch(error => {
        console.error(error);
        document.body.innerText = "fuck you've really done it now";
      });
    }
    
    function run() {
      console.log("running");

      document.querySelectorAll('.matchup .entry button').forEach(button => button.addEventListener('click', vote));

      fetch('/match')
      .then(response => {
        return response.json();
      })
      .then(o => {
        console.log(o);
        update(o);
      })
      .catch(error => {
        console.error(error);
        document.body.innerText = "fuck you've really done it now";
      });
    }
    document.addEventListener('DOMContentLoaded', run, false);
  </script>
  <style>
    body {
      background-color: #043C66;
      color: #9CE5F6;
      font-family: sans-serif;
      margin: 0 auto;
      width: 800px;
    }

    h1, h2 {
      text-align: center;
    }

    a {
      color: #eee;
    }

    b {
      color: #eee;
    }

    .matchup.loading button {
      visibility: hidden;
    }
    
    .results.hidden {
      visibility: hidden;
    }

    .entries {
      text-align: center;
      display: flex;
      justify-content: space-evenly;
    }

    .entry {
      padding: 2em;
    }

    .entry .name {
      font-size: 125%;
      margin-bottom: 0.25em;
    }

    .boards {
      display: flex;
    }

    button {
      min-width: 200px;
      min-height: 150px;
      border-radius: 25px;
      background-color: #7EAFCD;
      border: #11252C;
    }

    li {
      margin-bottom: 0.5em;
    }
  </style>
</head>
<body>
  <h1>Star Wars And Pickle Rick Name Kombat</h1>
  <div class="matchup loading">
    <h2>Vote Now!</h2>
    <div class="entries">
      <div class="first entry">
        <button>
          <div class="name"></div>
          <div class="author"></div>
        </button>
      </div>
      <div class="second entry">
        <button>
          <div class="name"></div>
          <div class="author"></div>
        </button>
      </div>
    </div>
  </div>
  <div class="results hidden">
    <h2>Last Match</h2>
    <div class="entries">
      <div class="first entry">
        <div class="name"></div>
        <div class="author"></div>
        <p>
          <span class="wins"></span>W - <span class="losses"></span>L (<span class="score"></span>)
        </p>
      </div>
      <div class="second entry">
        <div class="name"></div>
        <div class="author"></div>
        <p>
          <span class="wins"></span>W - <span class="losses"></span>L (<span class="score"></span>)
        </p>
      </div>
    </div>
  </div>
  <div class="boards">
    <section>
      <h2>Top Names</h2> 
      <ol>
        {{#each top}}
          <li>{{this.score}}: "<a href="{{this.link}}">{{this.name}}</a>" by {{this.author}} ({{this.wins}}W - {{this.losses}}L)</li>
        {{/each}}
      </ol>
    </section>

    <section>
      <h2>Top Namers</h2> 
      <ol>
        {{#each authors}}
          <li><b>{{this.author}}</b>: average {{this.avg}}, total {{this.total}}</li>
        {{/each}}
      </ol>
    </section>
  </div>
</body>